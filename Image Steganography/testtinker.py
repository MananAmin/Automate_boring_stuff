#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Oct 01, 2018 09:40:15 AM IST  platform: Windows NT
from Crypto.PublicKey import RSA
import sys
import os
import tkinter
from tkinter import filedialog
from tkinter import *


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

#import stegano_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
  #  stegano_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)

    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None









class New_Toplevel:



    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        font9 = "-family {Segoe UI Emoji} -size 11 -weight normal "  \
            "-slant italic -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("811x444+634+435")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#99dbef")
        top.configure(highlightcolor="#142e63")

        def hellocallback():

            os.system('python3 keygeneration.py')
            print("clicked")

        self.Button1 = Button(top)
        self.Button1.place(relx=0.444, rely=0.113, height=33, width=146)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font=font9)
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''key generation''')
        self.Button1.configure(w,command= hellocallback)

        self.Button1.pack()

        print("clicked")
        self.Label1 = Label(top)
        self.Label1.place(relx=0.259, rely=0.113, height=26, width=107)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Key Generation''')
        def select():
            self.Label2.configure(text='''Text Encryption''')

        self.Label2 = Label(top)
        self.Label2.place(relx=0.025, rely=0.405, height=26, width=142)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")


        def openfile():
            self.filename = filedialog.askopenfilename(initialdir="/", title="Select file",
                                                       filetypes=(("jpg files", "*.jpg"), (" all files", "*.*")))
            self.Label2.configure(textvariable=self.filename)

        self.TButton1 = ttk.Button(top)
        self.TButton1.place(relx=0.21, rely=0.405, height=30, width=168)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''encrypt''')
        self.TButton1.configure(command=openfile)


        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.049, rely=0.687, height=27, width=205)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Encode Text Into Image''')

        self.TButton2 = ttk.Button(top)
        self.TButton2.place(relx=0.259, rely=0.687, height=30, width=148)
        self.TButton2.configure(takefocus="")
        self.TButton2.configure(text='''encode''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.506, rely=0.293, relheight=0.541)
        self.TSeparator1.configure(orient="vertical")

        self.Label2_2 = Label(top)
        self.Label2_2.place(relx=0.518, rely=0.405, height=26, width=142)
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(activeforeground="black")
        self.Label2_2.configure(background="#d9d9d9")
        self.Label2_2.configure(disabledforeground="#a3a3a3")
        self.Label2_2.configure(foreground="#000000")
        self.Label2_2.configure(highlightbackground="#d9d9d9")
        self.Label2_2.configure(highlightcolor="black")
        self.Label2_2.configure(text='''Text Decryption''')

        self.TLabel1_3 = ttk.Label(top)
        self.TLabel1_3.place(relx=0.543, rely=0.698, height=27, width=205)
        self.TLabel1_3.configure(background="#d9d9d9")
        self.TLabel1_3.configure(foreground="#000000")
        self.TLabel1_3.configure(font="TkDefaultFont")
        self.TLabel1_3.configure(relief=FLAT)
        self.TLabel1_3.configure(text='''Encode Text Into Image''')

        self.TButton1_4 = ttk.Button(top)
        self.TButton1_4.place(relx=0.74, rely=0.405, height=30, width=168)

        self.TButton1_4.configure(takefocus="")
        self.TButton1_4.configure(text='''decrypt''')

        self.TButton1_5 = ttk.Button(top)
        self.TButton1_5.place(relx=0.752, rely=0.698, height=30, width=168)
        self.TButton1_5.configure(takefocus="")
        self.TButton1_5.configure(text='''decode''')
        #top.mainloop()





if __name__ == '__main__':
    vp_start_gui()


